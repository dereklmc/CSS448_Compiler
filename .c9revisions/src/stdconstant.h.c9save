{"ts":1352694908466,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#ifndef STDCONSTANT_H\n#define STDCONSTANT_H\n#include \"constant.h\"\nusing namespace std;\nclass StdConstant : public Constant<bool>\n{\n    public:\n        friend std::ostream& operator<<(std::ostream& out, const StdConstant s)\n        {\n            s.print(out);\n        }\n\t\n        // Remember to use: const StdConstant StdConstant::TRUE(\"true\", true)\n        // to add to scope 0\n        static const StdConstant TRUE;\n        static const StdConstant FALSE;\n        StdConstant(string name, bool value) : Constant(name, value) {};\n    protected:\n\t    void print(std::ostream& out) const\n\t    {\n\t\t    Symbol::print(out);\n\t    };\n    //private:\n\t    //stdConstant(std::string, bool);\n};\n\n#endif\n"]],"start1":0,"start2":0,"length1":0,"length2":692}]],"length":692}
