{"ts":1352698152935,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#ifndef PROCEDURE_H\n#define PROCEDURE_H\n\n#include \"symbol.h\"\n#include \"Parameter.h\"\n\n#include<vector>\n\n/**\n * Represents an identifier for a procedure in pascal.\n * A procedure has a name and a set of parameters.\n */\nclass Procedure : public Symbol {\n\t\n\tfriend std::ostream& operator<<(std::ostream& out, const Procedure s)\n    {\n        s.print(out);\n    }\n\n    public:\n        // ctr inherited from Symbol.\n        Procedure(string);\n        // Add a new parameter that must be given when calling the procedure.\n        bool addParameter(const Parameter&);\n        // Checks if param with given name is in the current procedure.\n        bool hasParameter(const string&) const;\n\tprotected:\n\t\tvoid print(std::ostream& out) const;\n\n    private:\n        // parameters required when calling the procedure.\n        std::vector<Parameter> parameters;\n};\n\n#endif\n"]],"start1":0,"start2":0,"length1":0,"length2":857}]],"length":857}
