{"ts":1352699044419,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#ifndef CONSTANT_H\n#define CONSTANT_H\n#include \"symbol.h\"\n\ntemplate <class T>\nclass Constant : public Symbol\n{\n    private:\n        T type;\n    public:\n\t    friend std::ostream& operator<<(std::ostream& out, const Constant s)\n    \t{\n        \ts.print(out);\n\t\t    return out;\n    \t}\n        Constant(std::string n, T t) : Symbol(n)\n        {\n            type = t;\n        }\n\tprotected:\n        void print(std::ostream& out) const\n        {\n            \tSymbol::print(out);\n\t\t\t\tout << \" \" << type;\n        }\n};\n\n#endif\n"]],"start1":0,"start2":0,"length1":0,"length2":516}]],"length":516}
